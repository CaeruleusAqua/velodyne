cmake_minimum_required(VERSION 3.4)
project(pointcloud_cluster)

set(CMAKE_CXX_STANDARD 11)

## set search path for od
SET(CMAKE_MODULE_PATH "${OPENDAVINCI_DIR}/share/cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}/Modules" ${CMAKE_MODULE_PATH})
SET(CMAKE_MODULE_PATH "${ODVDVEHICLE_DIR}/share/cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}/Modules" ${CMAKE_MODULE_PATH})


#SET(OPENDLV_DIR "/opt/od4")
SET(OPENDLV_DIR "${OPENDAVINCI_DIR}")
SET(AUTOMOTIVEDATA_DIR "${OPENDLV_DIR}")
SET(ODVDAPPLANIX_DIR "${ODVDVEHICLE_DIR}")


FIND_PACKAGE(OpenDaVINCI REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE( Eigen3 REQUIRED )
INCLUDE_DIRECTORIES( EIGEN3_INCLUDE_DIR )
FIND_PACKAGE (OpenDLV REQUIRED)
FIND_PACKAGE (AutomotiveData REQUIRED)
FIND_PACKAGE (ODVDApplanix REQUIRED)

IF( NOT AUTOMOTIVEDATA_INCLUDE_DIRS)
    MESSAGE( FATAL_ERROR "OPENDLV_INCLUDE_DIR not found" )
ENDIF()

IF( NOT AUTOMOTIVEDATA_INCLUDE_DIRS)
    MESSAGE( FATAL_ERROR "AUTOMOTIVEDATA_INCLUDE_DIRS not found" )
ENDIF()

IF( NOT EIGEN3_INCLUDE_DIR )
    MESSAGE( FATAL_ERROR "Please point the environment variable EIGEN3_INCLUDE_DIR to the include directory of your Eigen3 installation.")
ENDIF()


INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES(SYSTEM ${OPENDAVINCI_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (SYSTEM ${AUTOMOTIVEDATA_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (SYSTEM ${OPENDLV_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (SYSTEM ${ODVDAPPLANIX_INCLUDE_DIRS})




# add scanned files as libs
add_library(${PROJECT_NAME}-utils STATIC src/Utils.cpp)
add_library(${PROJECT_NAME}-pointcloud-clustering STATIC src/dbscan.cpp src/Obstacle.cpp src/Cluster.cpp src/PointcloudClustering.cpp src/Point.cpp src/Plane.cpp)


# add od and scnanned libs to LIBRARIES
set(LIBRARIES ${AUTOMOTIVEDATA_LIBRARIES} ${ODVDAPPLANIX_LIBRARY} ${OPENDLV_LIBRARIES} ${OPENDAVINCI_LIBRARIES} ${PROJECT_NAME}-pointcloud-clustering ${PROJECT_NAME}-utils)

# set cflags
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11") ## -Wall -Wextra")
SET(CMAKE_CXX_FLAGS_RELEASE "-march=native -O2 -pipe")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall ")

add_executable(${PROJECT_NAME} main.cpp)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBRARIES} ${OpenCV_LIBS})